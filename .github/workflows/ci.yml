name: CI

on:
  push:
    branches: [main, beta]
  pull_request:
    branches: [main, beta]

jobs:
  test:
    if: "!contains(github.event.head_commit.message, 'skip-ci')"

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [18.x, 19.x]

    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache ~/.pnpm-store
        uses: actions/cache@v2
        env:
          cache-name: cache-pnpm-store
        with:
          path: ~/.pnpm-store
          key:
            ${{ runner.os }}-${{ matrix.node-version }}-test-${{ env.cache-name
            }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-${{ matrix.node-version }}-test-
            ${{ runner.os }}-

      - name: Install pnpm
        run: npm i -g pnpm

      - name: Install deps
        run: pnpm i

      # Runs a set of commands using the runners shell
      - name: Build and Test
        run: pnpm test

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3

  release:
    runs-on: ubuntu-latest
    needs: ['test']
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    if:
      "!contains(github.event.head_commit.message, 'skip-release') &&
      !contains(github.event.head_commit.message, 'skip-ci') &&
      github.event_name != 'pull_request'"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
      - name: Cache ~/.pnpm-store
        uses: actions/cache@v2
        env:
          cache-name: cache-pnpm-store
        with:
          path: ~/.pnpm-store
          key:
            ${{ runner.os }}-${{ matrix.node-version }}-release-${{
            env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-release-${{ env.cache-name }}-
            ${{ runner.os }}-${{ matrix.node-version }}-release-
            ${{ runner.os }}-
      - name: Install pnpm
        run: npm i -g pnpm
      - name: Install dependencies
        run: pnpm i
      - name:
          Verify the integrity of provenance attestations and registry
          signatures for installed dependencies
        run: npm audit signatures
      - name: Build
        run: pnpm build
      - name: Release
        working-directory: dist
        run: pnpm dlx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
